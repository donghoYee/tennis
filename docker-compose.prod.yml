version: '3.8'

services:
  # 백엔드 서비스
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3001
      - CORS_ORIGIN=${FRONTEND_URL:-https://your-domain.com}
    volumes:
      - backend_data:/app/data
    networks:
      - tennis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/tournaments"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 프론트엔드 서비스
  frontend:
    build:
      context: ./tennis-tournament
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=${BACKEND_URL:-https://api.your-domain.com}
    depends_on:
      - backend
    networks:
      - tennis-network
    restart: unless-stopped

  # Nginx 리버스 프록시 + SSL
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - certbot_data:/var/www/certbot:ro
      - certbot_conf:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
    networks:
      - tennis-network
    restart: unless-stopped

  # SSL 인증서 자동 갱신
  certbot:
    image: certbot/certbot
    volumes:
      - certbot_data:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

networks:
  tennis-network:
    driver: bridge

volumes:
  backend_data:
  certbot_data:
  certbot_conf:
